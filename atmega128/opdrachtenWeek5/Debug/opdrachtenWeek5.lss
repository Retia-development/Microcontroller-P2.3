
opdrachtenWeek5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000330  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e40  00000000  00000000  000003ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008ea  00000000  00000000  0000122c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000526  00000000  00000000  00001b16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000014c  00000000  00000000  0000203c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000050e  00000000  00000000  00002188  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000060f  00000000  00000000  00002696  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002ca5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	c2 d0       	rcall	.+388    	; 0x21e <main>
  9a:	05 c1       	rjmp	.+522    	; 0x2a6 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <wait>:
	spi_writeWord(1,val1);
	spi_writeWord(2,val2);
	spi_writeWord(3,val3);
	spi_writeWord(4,val4);
	
}
  9e:	18 16       	cp	r1, r24
  a0:	19 06       	cpc	r1, r25
  a2:	6c f4       	brge	.+26     	; 0xbe <wait+0x20>
  a4:	20 e0       	ldi	r18, 0x00	; 0
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	e9 ef       	ldi	r30, 0xF9	; 249
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	31 97       	sbiw	r30, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <wait+0xe>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <wait+0x14>
  b2:	00 00       	nop
  b4:	2f 5f       	subi	r18, 0xFF	; 255
  b6:	3f 4f       	sbci	r19, 0xFF	; 255
  b8:	82 17       	cp	r24, r18
  ba:	93 07       	cpc	r25, r19
  bc:	a9 f7       	brne	.-22     	; 0xa8 <wait+0xa>
  be:	08 95       	ret

000000c0 <spi_masterInit>:
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	87 bb       	out	0x17, r24	; 23
  c4:	bb 98       	cbi	0x17, 3	; 23
  c6:	c0 9a       	sbi	0x18, 0	; 24
  c8:	82 e5       	ldi	r24, 0x52	; 82
  ca:	8d b9       	out	0x0d, r24	; 13
  cc:	08 95       	ret

000000ce <spi_write>:
  ce:	8f b9       	out	0x0f, r24	; 15
  d0:	77 9b       	sbis	0x0e, 7	; 14
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <spi_write+0x2>
  d4:	08 95       	ret

000000d6 <spi_slaveSelect>:
  d6:	98 b3       	in	r25, 0x18	; 24
  d8:	21 e0       	ldi	r18, 0x01	; 1
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <spi_slaveSelect+0xc>
  de:	22 0f       	add	r18, r18
  e0:	33 1f       	adc	r19, r19
  e2:	8a 95       	dec	r24
  e4:	e2 f7       	brpl	.-8      	; 0xde <spi_slaveSelect+0x8>
  e6:	20 95       	com	r18
  e8:	29 23       	and	r18, r25
  ea:	28 bb       	out	0x18, r18	; 24
  ec:	08 95       	ret

000000ee <spi_slaveDeSelect>:
  ee:	98 b3       	in	r25, 0x18	; 24
  f0:	21 e0       	ldi	r18, 0x01	; 1
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <spi_slaveDeSelect+0xc>
  f6:	22 0f       	add	r18, r18
  f8:	33 1f       	adc	r19, r19
  fa:	8a 95       	dec	r24
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <spi_slaveDeSelect+0x8>
  fe:	29 2b       	or	r18, r25
 100:	28 bb       	out	0x18, r18	; 24
 102:	08 95       	ret

00000104 <displayDriverInit>:
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	e7 df       	rcall	.-50     	; 0xd6 <spi_slaveSelect>
 108:	89 e0       	ldi	r24, 0x09	; 9
 10a:	e1 df       	rcall	.-62     	; 0xce <spi_write>
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	df df       	rcall	.-66     	; 0xce <spi_write>
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	ed df       	rcall	.-38     	; 0xee <spi_slaveDeSelect>
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	df df       	rcall	.-66     	; 0xd6 <spi_slaveSelect>
 118:	8a e0       	ldi	r24, 0x0A	; 10
 11a:	d9 df       	rcall	.-78     	; 0xce <spi_write>
 11c:	8f e0       	ldi	r24, 0x0F	; 15
 11e:	d7 df       	rcall	.-82     	; 0xce <spi_write>
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	e5 df       	rcall	.-54     	; 0xee <spi_slaveDeSelect>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	d7 df       	rcall	.-82     	; 0xd6 <spi_slaveSelect>
 128:	8b e0       	ldi	r24, 0x0B	; 11
 12a:	d1 df       	rcall	.-94     	; 0xce <spi_write>
 12c:	83 e0       	ldi	r24, 0x03	; 3
 12e:	cf df       	rcall	.-98     	; 0xce <spi_write>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	dd df       	rcall	.-70     	; 0xee <spi_slaveDeSelect>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	cf df       	rcall	.-98     	; 0xd6 <spi_slaveSelect>
 138:	8c e0       	ldi	r24, 0x0C	; 12
 13a:	c9 df       	rcall	.-110    	; 0xce <spi_write>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	c7 df       	rcall	.-114    	; 0xce <spi_write>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	d5 cf       	rjmp	.-86     	; 0xee <spi_slaveDeSelect>
 144:	08 95       	ret

00000146 <spi_writeWord>:
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	d8 2f       	mov	r29, r24
 14c:	c6 2f       	mov	r28, r22
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	c2 df       	rcall	.-124    	; 0xd6 <spi_slaveSelect>
 152:	8d 2f       	mov	r24, r29
 154:	bc df       	rcall	.-136    	; 0xce <spi_write>
 156:	8c 2f       	mov	r24, r28
 158:	ba df       	rcall	.-140    	; 0xce <spi_write>
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	c8 df       	rcall	.-112    	; 0xee <spi_slaveDeSelect>
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <writeNegLedDisplay>:
 164:	ff 92       	push	r15
 166:	0f 93       	push	r16
 168:	1f 93       	push	r17
 16a:	cf 93       	push	r28
 16c:	df 93       	push	r29
 16e:	9c 01       	movw	r18, r24
 170:	99 23       	and	r25, r25
 172:	34 f5       	brge	.+76     	; 0x1c0 <writeNegLedDisplay+0x5c>
 174:	fc 01       	movw	r30, r24
 176:	99 23       	and	r25, r25
 178:	24 f4       	brge	.+8      	; 0x182 <writeNegLedDisplay+0x1e>
 17a:	ee 27       	eor	r30, r30
 17c:	ff 27       	eor	r31, r31
 17e:	e8 1b       	sub	r30, r24
 180:	f9 0b       	sbc	r31, r25
 182:	0a e0       	ldi	r16, 0x0A	; 10
 184:	10 e0       	ldi	r17, 0x00	; 0
 186:	cf 01       	movw	r24, r30
 188:	b8 01       	movw	r22, r16
 18a:	66 d0       	rcall	.+204    	; 0x258 <__divmodhi4>
 18c:	9c 01       	movw	r18, r24
 18e:	48 2f       	mov	r20, r24
 190:	c4 e6       	ldi	r28, 0x64	; 100
 192:	d0 e0       	ldi	r29, 0x00	; 0
 194:	cf 01       	movw	r24, r30
 196:	be 01       	movw	r22, r28
 198:	5f d0       	rcall	.+190    	; 0x258 <__divmodhi4>
 19a:	82 1b       	sub	r24, r18
 19c:	93 0b       	sbc	r25, r19
 19e:	b8 01       	movw	r22, r16
 1a0:	5b d0       	rcall	.+182    	; 0x258 <__divmodhi4>
 1a2:	8b 01       	movw	r16, r22
 1a4:	f6 2e       	mov	r15, r22
 1a6:	cf 01       	movw	r24, r30
 1a8:	68 ee       	ldi	r22, 0xE8	; 232
 1aa:	73 e0       	ldi	r23, 0x03	; 3
 1ac:	55 d0       	rcall	.+170    	; 0x258 <__divmodhi4>
 1ae:	80 1b       	sub	r24, r16
 1b0:	91 0b       	sbc	r25, r17
 1b2:	82 1b       	sub	r24, r18
 1b4:	93 0b       	sbc	r25, r19
 1b6:	be 01       	movw	r22, r28
 1b8:	4f d0       	rcall	.+158    	; 0x258 <__divmodhi4>
 1ba:	c6 2f       	mov	r28, r22
 1bc:	da e0       	ldi	r29, 0x0A	; 10
 1be:	1d c0       	rjmp	.+58     	; 0x1fa <writeNegLedDisplay+0x96>
 1c0:	0a e0       	ldi	r16, 0x0A	; 10
 1c2:	10 e0       	ldi	r17, 0x00	; 0
 1c4:	b8 01       	movw	r22, r16
 1c6:	48 d0       	rcall	.+144    	; 0x258 <__divmodhi4>
 1c8:	fc 01       	movw	r30, r24
 1ca:	48 2f       	mov	r20, r24
 1cc:	c4 e6       	ldi	r28, 0x64	; 100
 1ce:	d0 e0       	ldi	r29, 0x00	; 0
 1d0:	c9 01       	movw	r24, r18
 1d2:	be 01       	movw	r22, r28
 1d4:	41 d0       	rcall	.+130    	; 0x258 <__divmodhi4>
 1d6:	8e 1b       	sub	r24, r30
 1d8:	9f 0b       	sbc	r25, r31
 1da:	b8 01       	movw	r22, r16
 1dc:	3d d0       	rcall	.+122    	; 0x258 <__divmodhi4>
 1de:	8b 01       	movw	r16, r22
 1e0:	f6 2e       	mov	r15, r22
 1e2:	c9 01       	movw	r24, r18
 1e4:	68 ee       	ldi	r22, 0xE8	; 232
 1e6:	73 e0       	ldi	r23, 0x03	; 3
 1e8:	37 d0       	rcall	.+110    	; 0x258 <__divmodhi4>
 1ea:	80 1b       	sub	r24, r16
 1ec:	91 0b       	sbc	r25, r17
 1ee:	8e 1b       	sub	r24, r30
 1f0:	9f 0b       	sbc	r25, r31
 1f2:	be 01       	movw	r22, r28
 1f4:	31 d0       	rcall	.+98     	; 0x258 <__divmodhi4>
 1f6:	c6 2f       	mov	r28, r22
 1f8:	df e0       	ldi	r29, 0x0F	; 15
 1fa:	64 2f       	mov	r22, r20
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	a3 df       	rcall	.-186    	; 0x146 <spi_writeWord>
 200:	6f 2d       	mov	r22, r15
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	a0 df       	rcall	.-192    	; 0x146 <spi_writeWord>
 206:	6c 2f       	mov	r22, r28
 208:	83 e0       	ldi	r24, 0x03	; 3
 20a:	9d df       	rcall	.-198    	; 0x146 <spi_writeWord>
 20c:	6d 2f       	mov	r22, r29
 20e:	84 e0       	ldi	r24, 0x04	; 4
 210:	9a df       	rcall	.-204    	; 0x146 <spi_writeWord>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	ff 90       	pop	r15
 21c:	08 95       	ret

0000021e <main>:


// Write a word = address byte + data byte from master to slave

int main()
{
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
	DDRB=0x01; // Set PB0 pin as output for display select
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	87 bb       	out	0x17, r24	; 23
	spi_masterInit(); // Initialize spi module
 226:	4c df       	rcall	.-360    	; 0xc0 <spi_masterInit>
	displayDriverInit(); // Initialize display chip
 228:	6d df       	rcall	.-294    	; 0x104 <displayDriverInit>
 22a:	88 ee       	ldi	r24, 0xE8	; 232
	// clear display (all zero's)
	
	wait(1000);
 22c:	93 e0       	ldi	r25, 0x03	; 3
 22e:	37 df       	rcall	.-402    	; 0x9e <wait>
 230:	c2 e3       	ldi	r28, 0x32	; 50
	// write 4-digit data
	for (int i =50; i>=-999; i--)
 232:	d0 e0       	ldi	r29, 0x00	; 0
	{
		writeNegLedDisplay(i);
 234:	ce 01       	movw	r24, r28
 236:	96 df       	rcall	.-212    	; 0x164 <writeNegLedDisplay>
		wait(1000);
 238:	88 ee       	ldi	r24, 0xE8	; 232
 23a:	93 e0       	ldi	r25, 0x03	; 3
 23c:	30 df       	rcall	.-416    	; 0x9e <wait>
 23e:	21 97       	sbiw	r28, 0x01	; 1
	displayDriverInit(); // Initialize display chip
	// clear display (all zero's)
	
	wait(1000);
	// write 4-digit data
	for (int i =50; i>=-999; i--)
 240:	c8 31       	cpi	r28, 0x18	; 24
 242:	8c ef       	ldi	r24, 0xFC	; 252
 244:	d8 07       	cpc	r29, r24
 246:	b1 f7       	brne	.-20     	; 0x234 <main+0x16>
	{
		writeNegLedDisplay(i);
		wait(1000);
	}
	wait(1000);
 248:	88 ee       	ldi	r24, 0xE8	; 232
 24a:	93 e0       	ldi	r25, 0x03	; 3
 24c:	28 df       	rcall	.-432    	; 0x9e <wait>
 24e:	81 e0       	ldi	r24, 0x01	; 1
	return (1);
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <__divmodhi4>:
 258:	97 fb       	bst	r25, 7
 25a:	07 2e       	mov	r0, r23
 25c:	16 f4       	brtc	.+4      	; 0x262 <__divmodhi4+0xa>
 25e:	00 94       	com	r0
 260:	06 d0       	rcall	.+12     	; 0x26e <__divmodhi4_neg1>
 262:	77 fd       	sbrc	r23, 7
 264:	08 d0       	rcall	.+16     	; 0x276 <__divmodhi4_neg2>
 266:	0b d0       	rcall	.+22     	; 0x27e <__udivmodhi4>
 268:	07 fc       	sbrc	r0, 7
 26a:	05 d0       	rcall	.+10     	; 0x276 <__divmodhi4_neg2>
 26c:	3e f4       	brtc	.+14     	; 0x27c <__divmodhi4_exit>

0000026e <__divmodhi4_neg1>:
 26e:	90 95       	com	r25
 270:	81 95       	neg	r24
 272:	9f 4f       	sbci	r25, 0xFF	; 255
 274:	08 95       	ret

00000276 <__divmodhi4_neg2>:
 276:	70 95       	com	r23
 278:	61 95       	neg	r22
 27a:	7f 4f       	sbci	r23, 0xFF	; 255

0000027c <__divmodhi4_exit>:
 27c:	08 95       	ret

0000027e <__udivmodhi4>:
 27e:	aa 1b       	sub	r26, r26
 280:	bb 1b       	sub	r27, r27
 282:	51 e1       	ldi	r21, 0x11	; 17
 284:	07 c0       	rjmp	.+14     	; 0x294 <__udivmodhi4_ep>

00000286 <__udivmodhi4_loop>:
 286:	aa 1f       	adc	r26, r26
 288:	bb 1f       	adc	r27, r27
 28a:	a6 17       	cp	r26, r22
 28c:	b7 07       	cpc	r27, r23
 28e:	10 f0       	brcs	.+4      	; 0x294 <__udivmodhi4_ep>
 290:	a6 1b       	sub	r26, r22
 292:	b7 0b       	sbc	r27, r23

00000294 <__udivmodhi4_ep>:
 294:	88 1f       	adc	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	5a 95       	dec	r21
 29a:	a9 f7       	brne	.-22     	; 0x286 <__udivmodhi4_loop>
 29c:	80 95       	com	r24
 29e:	90 95       	com	r25
 2a0:	bc 01       	movw	r22, r24
 2a2:	cd 01       	movw	r24, r26
 2a4:	08 95       	ret

000002a6 <_exit>:
 2a6:	f8 94       	cli

000002a8 <__stop_program>:
 2a8:	ff cf       	rjmp	.-2      	; 0x2a8 <__stop_program>
